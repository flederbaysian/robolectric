--- org/robolectric/internal/bytecode/ShadowImpl.java
+++ org/robolectric/internal/bytecode/ShadowImpl.java
@@ -18,13 +18,13 @@
   }
 
-  public <T> T newInstanceOf(Class<T> clazz) {
+  @Override public <T> T newInstanceOf(Class<T> clazz) {
     return ReflectionHelpers.callConstructor(clazz);
   }
 
-  public <T> T newInstance(Class<T> clazz, Class[] parameterTypes, Object[] params) {
+  @Override public <T> T newInstance(Class<T> clazz, Class[] parameterTypes, Object[] params) {
     return ReflectionHelpers.callConstructor(clazz, ReflectionHelpers.ClassParameter.fromComponentLists(parameterTypes, params));
   }
 
-  public <T> T directlyOn(T shadowedObject, Class<T> clazz) {
+  @Override public <T> T directlyOn(T shadowedObject, Class<T> clazz) {
     return createProxy(shadowedObject, clazz);
   }
@@ -44,5 +44,5 @@
   }
 
-  @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
+  @Override @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
   public <R> R directlyOn(Object shadowedObject, String clazzName, String methodName, ReflectionHelpers.ClassParameter... paramValues) {
     try {
@@ -54,5 +54,5 @@
   }
 
-  @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
+  @Override @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
   public <R, T> R directlyOn(T shadowedObject, Class<T> clazz, String methodName, ReflectionHelpers.ClassParameter... paramValues) {
     String directMethodName = directMethodName(methodName);
@@ -60,5 +60,5 @@
   }
 
-  @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
+  @Override @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
   public <R, T> R directlyOn(Class<T> clazz, String methodName, ReflectionHelpers.ClassParameter... paramValues) {
     String directMethodName = directMethodName(methodName);
@@ -66,5 +66,5 @@
   }
 
-  @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
+  @Override @SuppressWarnings(value = {"unchecked", "TypeParameterUnusedInFormals"})
   public <R> R invokeConstructor(Class<? extends R> clazz, R instance, ReflectionHelpers.ClassParameter... paramValues) {
     String directMethodName = directMethodName(ShadowConstants.CONSTRUCTOR_METHOD_NAME);
@@ -72,5 +72,5 @@
   }
 
-  public String directMethodName(String methodName) {
+  @Override public String directMethodName(String methodName) {
     return ShadowConstants.ROBO_PREFIX + methodName;
 
